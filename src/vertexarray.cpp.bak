#include "vertexarray.h"
#include "game.h"

VertexArray::VertexArray(const float *verts, unsigned int numVerts,
                         const unsigned int *indices, unsigned int numInidices)
    : mNumVerts(numVerts), mNumIndices(numInidices) {
  glGenVertexArrays(1, &mVertexArray);
  glBindVertexArray(mVertexArray);
  glGenBuffers(1, &mVertexBuffer);
  glBindBuffer(GL_ARRAY_BUFFER, mVertexBuffer);

  glBufferData(
    GL_ARRAY_BUFFER, 
    numVerts*3*sizeof(float),
    verts,
    GL_STATIC_DRAW
  );

  glGenBuffers(1, &mIndexBuffer);
  glBindBuffer(GL_ELEMENT_ARRAY_BUFFER, mIndexBuffer);

  glBufferData(
    GL_ELEMENT_ARRAY_BUFFER, 
    numInidices*3*sizeof(unsigned int),
    indices,
    GL_STATIC_DRAW
  );

glEnableVertexAttribArray(0);

  glVertexAttribPointer(
0, // Attribute index (0 for first one)
3, // Number of components (3 in this case)
GL_FLOAT, // Type of the components
GL_FALSE, // (Only used for integral types)
sizeof(float) * 3, // Stride (usually size of each vertex)
0 // Offset from start of vertex to this attribute
);
}
VertexArray::~VertexArray() {glDeleteBuffers(1, &mVertexBuffer);
glDeleteBuffers(1, &mIndexBuffer);
glDeleteVertexArrays(1, &mVertexArray);}
void VertexArray::SetActive() {glBindVertexArray(mVertexArray);}
